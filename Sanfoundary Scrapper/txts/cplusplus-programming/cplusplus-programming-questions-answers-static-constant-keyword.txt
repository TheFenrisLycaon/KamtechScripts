1. What will be the output of the following C++ code?
#include <iostream>
using namespace std;
class Test
{
    static int x;
  public:
    Test() { x++; }
    static int getX() {return x;}
};
int Test::x = 0;
int main()
{
    cout << Test::getX() << " ";
    Test t[5];
    cout << Test::getX();
}
a) 0 0
b) 5 0
c) 0 5
d) 5 5
c
2. What will be the output of the following C++ code?
#include <iostream>
using namespace std;
class Player
{
  private:
    int id;
    static int next_id;
  public:
    int getID() { return id; }
    Player()  {  id = next_id++; }
};
int Player::next_id = 1;
int main()
{
  Player p1;
  Player p2;
  Player p3;
  cout << p1.getID() << " ";
  cout << p2.getID() << " ";
  cout << p3.getID();
  return 0;
}
a) 1 2 3
b) 2 2 2
c) 1 3 1
d) 1 1 1
a
3. Which of the following is correct about static variables?
a) Static functions do not support polymorphism
b) Static data members cannot be accessed by non-static member functions
c) Static data members functions can access only static data members
d) Static data members functions can access both static and non-static data members
c
4. What will be the output of the following C++ code?
#include <iostream>
using namespace std;
class A
{
   private:
     int x;
   public:
     A(int _x)  {  x = _x; }
     int get()  { return x; }
};
class B
{
    static A a;
  public:
   static int get()
   {  return a.get(); }
}; 
int main(void)
{
    B b;
    cout << b.get();
    return 0;
}
a) Garbage value
b) Compile-time Error
c) Run-time Error
d) Nothing is printed
b
5. What will be the output of the following C++ code?
#include<iostream>
using namespace std;
class Test
{
   private:
     static int count;
   public:
     Test& fun(); 
};
int Test::count = 0;
Test& Test::fun()
{
    Test::count++;
    cout << Test::count << " ";
    return *this;
}
int main()
{
    Test t;
    t.fun().fun().fun().fun();
    return 0;
}
a) 4 4 4 4
b) 1 2 3 4
c) 1 1 1 1
d) 0 1 2 3
b
6. What will be the output of the following C++ code?
#include <iostream>
class Test
{
   public:
     void fun();
};
static void Test::fun()   
{
    std::cout<<"fun() is static";
}
int main()
{
    Test::fun();   
    return 0;
}
a) fun() is static
b) Compile-time Error
c) Run-time Error
d) Nothing is printed
b
7. Const qualifier can be applied to which of the following?
i) Functions inside a class
ii) Arguments of a function
iii) Static data members
iv) Reference variables
a) i, ii and iii
b) i, ii, iii, and iv
c) ii, iii and iv
d) i only
b
8. What will be the output of the following C++ code?
#include <iostream>
using namespace std;
class Point
{
    int x, y;
  public:
   Point(int i = 0, int j =0)
   { x = i; y = j;  }
   int getX() const { return x; }
   int getY() {return y;}
};
 
int main()
{
    const Point t;
    cout << t.getX() << " ";
    cout << t.gety();
    return 0;
}
a) 0 0
b) Garbage values
c) Compile erroe
d) Segmentation fault
c
9. What will be the output of the following C++ code?
#include <stdio.h>
int main()
{
   const int x;
   x = 10;
   printf("%d", x);
   return 0;
}
a) 10
b) Garbage value
c) Error
d) Segmentation fault
c
10. What will be the output of the following C++ code?
#include <iostream>
int const s=9;
int main()
{
    std::cout << s;
    return 0;
}
a) 9
b) Garbage value
c) Error
d) Segmentation fault
a
Sanfoundry Global Education & Learning Series – C++ Programming Language.
C++ Practice ResourcesC++ Mock Tests & Certification Test | 1000 C++ MCQs | 1000 C++ Algorithms | Best C++ Books
Participate in the Sanfoundry Certification contest to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs!
Telegram | Youtube | LinkedIn | Instagram | Facebook | Twitter | Pinterest
Youtube | LinkedIn | Instagram | Facebook | Twitter | Pinterest
« Prev - C++ Programming Questions and Answers – C++ Concepts – 3» Next - C++ Programming Questions and Answers –  Types 
