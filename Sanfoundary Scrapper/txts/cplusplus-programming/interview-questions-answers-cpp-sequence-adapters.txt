This section on C++ programming interview questions and answers focuses on “Sequence Adapters”. One shall practice these interview questions to improve their C++ programming skills needed for various interviews (campus interviews, walkin interviews, company interviews), placements, entrance exams and other competitive exams. These questions can be attempted by anyone focusing on learning C++ programming language. They can be a beginner, fresher, engineering graduate or an experienced IT professional. Our C++ programming interview questions come with detailed explanation of the answers which helps in better understanding of C++ concepts.
Here is a listing of C++ language programming interview questions on “Sequence Adapters” along with answers, explanations and/or solutions:
1. What do container adapter provide to interface?
a) Restricted interface
b) More interface
c) No interface
d) Memory interface
a
2. What does the sequence adaptor provide?
a) Insertion
b) Deletion
c) Interface to sequence container
d) Insertion & Deletion
c
3. Which are presented in the container adaptors?
a) stack
b) queue
c) priority_queue
d) all of the mentioned
d
4. What will be the output of the following C++ code?
    #include <iostream>    #include <queue>      using namespace std;    int main ()    {        queue<int> myqueue;        myqueue.push(12);        myqueue.push(75);          myqueue.back() -= myqueue.front();        cout << myqueue.back() << endl;        return 0;    }
a) 12
b) 75
c) 63
d) 74
c
Output:
$ g++ sca.cpp
$ a.out
63
5. What will be the output of the following C++ code?
    #include <iostream>    #include <queue>    using namespace std;    int main ()    {        queue<int> myqueue;        int sum (0);        for (int i = 1; i <= 10; i++)             myqueue.push(i);        while (!myqueue.empty())        {            sum += myqueue.front();            myqueue.pop();        }        cout << sum << endl;        return 0;    }
a) 51
b) 52
c) 54
d) 55
d
Output:
$ g++ sca1.cpp
$ a.out
55
6. What will be the output of the following C++ code?
    #include <iostream>    #include <queue>    using namespace std;    int main ()    {        priority_queue<int> mypq;        mypq.push(30);        mypq.push(100);        mypq.push(25);        mypq.push(40);        while (!mypq.empty())        {            cout << " " << mypq.top();            mypq.pop();        }        cout << endl;        return 0;    }
a) 100 40 30 25
b) 100 40 30
c) 100 40
d) 100 30 25
a
Output:
$ g++ sca2.cpp
$ a.out
100 40 30 25
7. What will be the output of the following C++ code?
    #include <iostream>    #include <stack>    using namespace std;    int main ()    {        stack<int> myints;        cout  << (int) myints.size();        for (int i = 0; i < 5; i++) myints.push(i);        cout  << (int) myints.size() << endl;        return 0;    }
a) 05
b) 15
c) 24
d) 102
a
Output:
$ g++ sca3.cpp
$ a.out
05
8. What will be the output of the following C++ code?
    #include <iostream>    #include <stack>    using namespace std;    int main ()    {        stack<int> mystack;        mystack.push(10);        mystack.push(20);        mystack.top() -= 5;        cout << mystack.top() << endl;        return 0;    }
a) 10
b) 20
c) 13
d) 15
d
Output:
$ g++ sca4.cpp
$ a.out
15
9. In which context does the stack operates?
a) FIFO
b) LIFO
c) Both FIFO & LIFO
d) LIFI
b
10. Which operator is used in priority queue?
a) operator<
b) operator>
c) operator)
d) operator!
a
Sanfoundry Global Education & Learning Series – C++ Programming Language.
C++ Practice ResourcesC++ Mock Tests & Certification Test | 1000 C++ MCQs | 1000 C++ Algorithms | Best C++ Books
Participate in the Sanfoundry Certification contest to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs!
Telegram | Youtube | LinkedIn | Instagram | Facebook | Twitter | Pinterest
Youtube | LinkedIn | Instagram | Facebook | Twitter | Pinterest
« Prev - C++ Programming Questions and Answers – Sequences» Next - C++ Programming Questions and Answers – Associative Containers 
