1. Virtual memory allows ____________
a) execution of a process that may not be completely in memory
b) a program to be smaller than the physical memory
c) a program to be larger than the secondary storage
d) execution of a process without being in physical memory
a
2. The instruction being executed, must be in ____________
a) physical memory
b) logical memory
c) physical & logical memory
d) none of the mentioned
a
3. Error handler codes, to handle unusual errors are ____________
a) almost never executed
b) executed very often
c) executed periodically
d) none of the mentioned
a
4. The ability to execute a program that is only partially in memory has benefits like ____________
a) The amount of physical memory cannot put a constraint on the program
b) Programs for an extremely large virtual space can be created
c) Throughput increases
d) All of the mentioned
d
5. In virtual memory. the programmer __________ of overlays.
a) has to take care
b) does not have to take care
c) all of the mentioned
d) none of the mentioned
b
6. Virtual memory is normally implemented by ________
a) demand paging
b) buses
c) virtualization
d) all of the mentioned
a
7. Segment replacement algorithms are more complex than page replacement algorithms because ____________
a) Segments are better than pages
b) Pages are better than segments
c) Segments have variable sizes
d) Segments have fixed sizes
c
8. A swapper manipulates ___________ whereas the pager is concerned with individual _______ of a process.
a) the entire process, parts
b) all the pages of a process, segments
c) the entire process, pages
d) none of the mentioned
c
9. Using a pager ____________
a) increases the swap time
b) decreases the swap time
c) decreases the swap time & amount of physical memory needed
d) increases the amount of physical memory needed
c
10. The valid – invalid bit, in this case, when valid indicates?
a) the page is not legal
b) the page is illegal
c) the page is in memory
d) the page is not in memory
c
11. A page fault occurs when?
a) a page gives inconsistent data
b) a page cannot be accessed due to its absence from memory
c) a page is invisible
d) all of the mentioned
b
12. When a page fault occurs, the state of the interrupted process is ____________
a) disrupted
b) invalid
c) saved
d) none of the mentioned
c
13. When a process begins execution with no pages in memory?
a) process execution becomes impossible
b) a page fault occurs for every page brought into memory
c) process causes system crash
d) none of the mentioned
b
14. If the memory access time is denoted by ‘ma’ and ‘p’ is the probability of a page fault (0 <= p <= 1). Then the effective access time for a demand paged memory is ____________
a) p x ma + (1-p) x page fault time
b) ma + page fault time
c) (1-p) x ma + p x page fault time
d) none of the mentioned
c
15. When the page fault rate is low ____________
a) the turnaround time increases
b) the effective access time increases
c) the effective access time decreases
d) turnaround time & effective access time increases
c
16. Locality of reference implies that the page reference being made by a process ____________
a) will always be to the page used in the previous page reference
b) is likely to be one of the pages used in the last few page references
c) will always be one of the pages existing in memory
d) will always lead to page faults
b
Sanfoundry Global Education & Learning Series – Operating System.
Here’s the list of Best Reference Books in Operating System.
To practice all areas of Operating System, here is complete set on 1000+ Multiple Choice Questions and Answers on Operating System.
Participate in the Sanfoundry Certification contest to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs!
Telegram | Youtube | LinkedIn | Instagram | Facebook | Twitter | Pinterest
Youtube | LinkedIn | Instagram | Facebook | Twitter | Pinterest
« Prev - Operating System Questions & Answers – Virtual Memory» Next - Operating System Questions & Answers – Virtual Memory – Page Replacement Algorithms – 1 
